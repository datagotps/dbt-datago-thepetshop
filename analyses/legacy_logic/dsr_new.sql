create or replace table Fact.Fact_Orders_table as WITH petshop_value_entry as ( select petshopvalueentry.* except(Global_Dimension_2_Code,Global_Dimension_1_Code), coalesce( cast(B2BOrderExclusion.Global_Dimension_2_Profit_Center as string), petshopvalueentry.Global_Dimension_2_Code ) as Global_Dimension_2_Code, coalesce( cast(B2BOrderExclusion.Global_Dimension_2_Profit_Center as string), petshopvalueentry.Global_Dimension_2_Code ) as Global_Dimension_2_Profit_Center_Code, coalesce( B2BOrderExclusion.Global_Dimension_1_Store, petshopvalueentry.Global_Dimension_1_Code ) as Global_Dimension_1_Code from `sql_erp_prod_dbo.petshop_value_entry_437dbf0e_84ff_417a_965d_ed2bb9650972` as petshopvalueentry left join `tps-data-386515.ADHOC_Files.B2BOrderExclusion` as B2BOrderExclusion on petshopvalueentry.document_no_=B2BOrderExclusion.Document_No ), CTE AS ( select Case when dsr_defects.flag = 1 then Date(Extract(Year from ll.Document_Date) , Extract(Day from ll.Document_Date) , Extract(month from ll.Document_Date)) else ll.Document_Date end as Document_Date, --Case When CusMas.Email IS NULL OR CusMas.Email = '' Then "Not Available" else CusMas.Email end as CustomerEmail, Case when ll.CustomerEmail is Not NULL OR ll.CustomerEmail != '' Then ll.CustomerEmail when (ll.CustomerEmail IS NULL OR ll.CustomerEmail = '') AND (CusMas.Email is Not NULL OR CusMas.Email != '') Then CusMas.Email when (ll.CustomerEmail IS NULL OR ll.CustomerEmail = '') AND (CusMas.Email is NULL OR CusMas.Email = '') Then 'Not Available' else NULL end as CustomerEmail, ll.* Except(Document_Date,CustomerEmail), jj.Staff_ID,jj.Staff_Name from (select *,unit_cost+amount as margin, case when Global_Dimension_2_Code='B2B' then 0 when data_source='ERP' and System_Basket_Price_VAT>=amount_incl_tax then System_Basket_Price_VAT-amount_incl_tax when data_source='OCC' then Unit_Price-amount_incl_tax else (-1*Discount_Amount_final) end as discount_inc_vat, case when data_source='ERP' then amount_incl_tax else order_level_AmountInclTax_split end as revenue_incl_shipping from ( (SELECT "OCC"as data_source, OrderNo, date(OrderDate)as OrderDate, ItemNo,ItemId, ProductName, Brand, Item_Category, Item_Sub_Category, Emirate, Latitude, Longitude, Platform, OrderSource, delivery_type, OrderType, --Case When CustomerEmail is null or CustomerEmail = "" then "Not Available" else CustomerEmail end as CustomerEmail, CustomerEmail, CustomerId, CONCAT('971', PhoneNumber) as PhoneNumber, OrderStatusId, OrderStatus, PaymentMethod, CouponCode, OrderType2, NULL as Document_no, "ONLINE" as Location_Code, NULL as Inventory_Posting_Group, NULL as valued_quantity, NULL as item_ledger_entry_quantity, 1 as invoiced_quantity, NULL as Source_Code, NULL as Global_Dimension_1_Code, "ONLINE" as Global_Dimension_2_Code, "ONLINE" as Global_Dimension_2_Profit_Center_Code, NULL as Gen_Bus_Posting_Group, NULL as Document_Date, NULL as valuation_date, OrderDate as Unit_Price_Date, Amount as amount, AmountInclTax as amount_incl_tax, Unit_Price AS Unit_Price, -1*unit_cost AS unit_cost, NULL as Final_Discount, NULL as System_Basket_Price_VAT, NULL as Discount_Amount_final, order_level_AmountInclTax as order_level_AmountInclTax, order_level_Discount as order_level_Discount, order_level_amount as order_level_amount, order_level_tax as order_level_tax, ShippingCharges, CODCharges, GiftCharges, order_level_coupon_amount as order_level_coupon_amount, order_level_AmountInclTax_split as order_level_AmountInclTax_split FROM ( select distinct A.WebOrderNo as OrderNo,A.InsertedOn as OrderDate, B.ItemNo,A.AmountInclTax,A.Discount,A.ItemId,A.UnitPrice,A.Amount, c.ProductName, c.Brand, c.Item_Category, c.Item_Sub_Category,c.unit_cost, dd.OrderNo as weborderno,dd.Emirate,dd.Latitude, dd.Longitude,dd.Platform, dd.OrderSource, dd.delivery_type,dd.OrderType, dd.CustomerEmail, dd.CustomerId,dd.FirstName, dd.PhoneNumber, dd.OrderStatusId,dd.OrderStatus, dd.PaymentMethod,dd.CouponCode,dd.AmountInclTax as order_level_AmountInclTax, dd.Discount as order_level_Discount, dd.Amount as order_level_amount, dd.Tax as order_level_tax, dd.ShippingCharges, dd.CODCharges, dd.GiftCharges, dd.CouponAmount as order_level_coupon_amount, dd.OrderType2, nn.Unit_Price, CASE WHEN A.AmountInclTax = 0 THEN 0 ELSE dd.AmountInclTax * (A.AmountInclTax / sum(A.AmountInclTax)over(partition by A.WebOrderNo)) END AS order_level_AmountInclTax_split from `mysql_ofs.inboundpaymentline` A left outer join `mysql_ofs.orderdetail` B on A.ItemId = B.ItemId left join ( select * from `Fact.Fact_Item_Master` ) c on c.itemno=B.itemno left join ( select OrderNo,Emirate,Latitude, Longitude,Platform, OrderSource, delivery_type,OrderType, CustomerEmail, CustomerId,FirstName, PhoneNumber, OrderStatusId,OrderStatus, PaymentMethod,CouponCode,AmountInclTax, Discount, ShippingCharges, CODCharges, GiftCharges, Amount, Tax, CouponAmount, OrderType2 from ( select distinct A.WebOrderNo as OrderNo,A.OrderDateTime as OrderDate, A.CustomerComment as CustomerComment,B.city as Region, B.Street as Street, C.LastName as LastName,B.Region as City,Case WHEN B.State = 'AJ' then "Ajman" WHEN B.State = 'AZ' then "Abu Dhabi" WHEN B.State = 'DU' then "Dubai" WHEN B.State = 'FU' then "Fujairah" WHEN B.State = 'RK' then "Ras al-Khaimah" WHEN B.State = 'Ras Al Khaimah' then "Ras al-Khaimah" WHEN B.State = 'SH' then "Sharjah" WHEN B.State = 'UQ' then "Umm al-Quwain" WHEN B.State = 'Umm Al Quwain' then "Umm al-Quwain" else B.State end as Emirate, B.Latitude,B.Longitude, case when C.OrderSource ='D' then 'Website' when C.OrderSource in ('CRM','CRM Exchange','FOC') then 'CRM' when C.OrderSource in('A') then 'Android' when C.OrderSource in('I') then 'iOS' else C.OrderSource end as Platform, case when C.OrderSource ='D' then 'Website' when C.OrderSource in ('CRM','CRM Exchange','FOC') then 'CRM' when C.OrderSource in('A','I') then 'Mobile App' else C.OrderSource end as OrderSource, a.ordertype as delivery_type, C.OrderType, C.CustomerEmail,A.CustomerId as CustomerId,C.FirstName as FirstName, C.CustomerPhone as PhoneNumber,C.OrderStatus as OrderStatusId,D.StatusName as OrderStatus, A.PaymentGateway as PaymentMethod,A.ReservedField1 as Area,A.ReservedField2, A.ReservedField3,M.CouponCode as CouponCode,A.ReservedField5,E.AmountInclTax, E.Discount,E.ShippingCharges,E.CODCharges,E.GiftCharges,E.Amount,E.Tax, M.couponamount as CouponAmount,E.CustomizedCharges,E.StoreCredit,E.OtherCharges, E.Loyaltypoints,E.LoyalityPointAmount,C.PackagingLocation, case when C.PackagingLocation= 4 then 'OnlineDelivery' else 'Click&Collect' end as OrderType2 From `mysql_ofs.crmorders` C left join `mysql_ofs.inboundsalesheader` A on A.WebOrderNo=C.WebOrderNo join `mysql_ofs.inboundorderaddress` B on A.WebOrderNo=B.WebOrderNo join `mysql_ofs.orderstatusmaster` D on C.OrderStatus=D.Id join `mysql_ofs.inboundpaymentline` E on A.WebOrderNo = E.WebOrderNo left join ( SELECT WebOrderNo, STRING_AGG(DISTINCT CouponCode, ',') AS CouponCode, SUM(couponamount) AS couponamount FROM `mysql_ofs.inboundpaymentline` WHERE CouponCode != '' AND IsHeader = 0 GROUP BY WebOrderNo )M on A.WebOrderNo = M.WebOrderNo where B.AddressDetailType = 'Ship' and E.IsHeader= 1 and A.OrderDateTime>= '2021-07-01' ) )dd on A.weborderno=dd.OrderNo left join ( select * from (select *,row_number()over(partition by item_no_,starting_date order by starting_date desc) as num2 from `Fact.Fact_Unit_Price`)where num2=1 )nn on CONCAT(CAST(EXTRACT(YEAR FROM A.InsertedOn) AS STRING), LPAD(CAST(EXTRACT(MONTH FROM A.InsertedOn) AS STRING), 2, '0'), LPAD(CAST(EXTRACT(DAY FROM A.InsertedOn) AS STRING), 2, '0'), B.itemno) =nn.YMDkey where A.IsHeader= 0 ) ) union all (SELECT "ERP"as data_source, SalesOrderNo as OrderNo, Posting_Date as OrderDate, ItemNo as ItemNo,NULL AS ItemId, ProductName as ProductName, Brand as Brand, Item_Category as Item_Category, Item_Sub_Category as Item_Sub_Category, null as Emirate, null as Latitude, null as Longitude, null as Platform, null as OrderSource, null as delivery_type, null as OrderType, --"Not Available" as CustomerEmail, CustomerEmail, Source_No as CustomerId, Phone_no_clean as PhoneNumber, null as OrderStatusId, null as OrderStatus, null as PaymentMethod, null as CouponCode, null as OrderType2, Document_no as Document_no, Location_Code as Location_Code, Inventory_Posting_Group as Inventory_Posting_Group, valued_quantity as valued_quantity, item_ledger_entry_quantity as item_ledger_entry_quantity, invoiced_quantity as invoiced_quantity, Source_Code as Source_Code, Global_Dimension_1_Code as Global_Dimension_1_Code, Global_Dimension_2_Code as Global_Dimension_2_Code, Global_Dimension_2_Profit_Center_Code, Gen_Bus_Posting_Group as Gen_Bus_Posting_Group, Document_Date as Document_Date, valuation_date as valuation_date, Unit_Price_Date as Unit_Price_Date, sales_amount__actual_ as amount, sales_amount__actual_ * 1.05 as amount_incl_tax, Unit_Price as Unit_Price, cost_amount__actual_ as unit_cost, Final_Discount as Final_Discount, System_Basket_Price_VAT as System_Basket_Price_VAT, Discount_Amount_final as Discount_Amount_final, null as order_level_AmountInclTax, null as order_level_Discount, null as order_level_amount, null as order_level_tax, null as ShippingCharges, null as CODCharges, null as GiftCharges, null as order_level_coupon_amount, null as order_level_AmountInclTax_split FROM ( WITH -- First Subquery subquery1 AS ( SELECT item_no_ AS VE_ItemNo, item_no_ AS ItemNo, CAST(posting_date AS DATE) AS Posting_Date, 'Sale' AS ItemLedger_Entry_Type, CAST(source_no_ AS STRING) AS Source_No, document_no_ AS Document_no, location_code AS Location_Code, inventory_posting_group AS Inventory_Posting_Group, source_posting_group AS Source_Posting_Group, item_ledger_entry_no_, valued_quantity, item_ledger_entry_quantity, invoiced_quantity, cost_per_unit, sales_amount__actual_, cost_amount__actual_, purchase_amount__actual_, discount_amount, source_code AS Source_Code, B.name, CAST(global_dimension_1_code AS STRING) AS Global_Dimension_1_Code, CASE -- Amazone B2B BCN/2021/4066 --Amazone FBA BCN/2024/4064 --Amazone.ae (Market Place) BCN/2021/0691 WHEN source_no_ = 'BCN/2021/4059' THEN 'INSTASHOP' WHEN source_no_ = 'BCN/2021/4408' THEN 'NOON' WHEN source_no_ = 'BCN/2021/4060' THEN 'ELGROCER' WHEN source_no_ = 'BCN/2021/4061' THEN 'SWAN' WHEN source_no_ = 'BCN/2021/4063' THEN 'CAREEM' WHEN source_no_ = 'BCN/2021/4064' THEN 'TALABAT' WHEN source_no_ = 'BCN/2021/4066' THEN 'AMAZON_DFS' WHEN source_no_ = 'BCN/2021/4067' THEN 'Deliveroo' when source_no_ = 'BCN/2021/0691' then 'AMAZON' -- adding new amazon fba codes when source_no_ = 'BCN/2024/4064' then 'AMAZON_FBA' --amazon fba codes end WHEN B.name = 'B2B Sales' THEN 'B2B' WHEN B.name = 'El Grocer' THEN 'ELGROCER' WHEN B.name = 'Instashop' THEN 'INSTASHOP' WHEN B.name IN ('Noon', 'NOWNOW', 'Now Now') THEN 'NOON' WHEN B.name = 'Online' THEN 'ONLINE' WHEN B.name = 'Project & Maintenance' THEN 'P&M' WHEN B.name = 'Pet Relocation' THEN 'PETRELOC' WHEN B.name = 'POS Sale' THEN 'SHOP' WHEN B.name = 'Swan Inc' THEN 'SWAN' WHEN B.name = 'Aquatics-Live Fish/Plants' THEN 'AQUA' WHEN B.name IN ('SOUQ', 'Souq/Amazone') THEN 'AMAZON' ELSE B.name END AS Global_Dimension_2_Code, Global_Dimension_2_Profit_Center_Code, cast(A.source_type as string)as source_type, gen__bus__posting_group AS Gen_Bus_Posting_Group, gen__prod__posting_group AS Gen_Prod_Posting_Group, CAST(document_date AS DATE) AS Document_Date, order_no_ AS Order_No, valuation_date, NULL AS Sales_Person_Code, cast(web_order_id as STRING) AS SalesOrderNo FROM petshop_value_entry A INNER JOIN ( SELECT code, name FROM `sql_erp_prod_dbo.petshop_dimension_value_437dbf0e_84ff_417a_965d_ed2bb9650972` WHERE dimension_code = 'PROFITCENTER' ) B ON A.Global_Dimension_2_Code = B.code INNER JOIN ( SELECT web_order_id, DocumentNO FROM `sql_erp_prod_dbo.petshop_inbound_sales_header_c91094c2_db03_49d2_8cb9_95c179ecbf9d` ) T ON A.document_no_ = T.DocumentNO WHERE DATE(A.posting_date) BETWEEN '2022-06-01' AND DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) AND item_ledger_entry_type = 1 AND source_code IN ('SALES', 'INVTADJMT') AND Global_Dimension_2_Code IN ('110000', '100001', '111000') ), -- Second Subquery subquery2 AS ( SELECT item_no_ AS VE_ItemNo, item_no_ AS ItemNo, CAST(posting_date AS DATE) AS Posting_Date, 'Sale' AS ItemLedger_Entry_Type, CAST(source_no_ AS STRING) AS Source_No, document_no_ AS Document_no, location_code AS Location_Code, inventory_posting_group AS Inventory_Posting_Group, source_posting_group AS Source_Posting_Group, item_ledger_entry_no_, valued_quantity, item_ledger_entry_quantity, invoiced_quantity, cost_per_unit, sales_amount__actual_, cost_amount__actual_, purchase_amount__actual_, discount_amount, source_code AS Source_Code, B.name, CAST(global_dimension_1_code AS STRING) AS Global_Dimension_1_Code, CASE -- Amazone B2B BCN/2021/4066 --Amazone FBA BCN/2024/4064 --Amazone.ae (Market Place) BCN/2021/0691 WHEN source_no_ = 'BCN/2021/4059' THEN 'INSTASHOP' WHEN source_no_ = 'BCN/2021/4408' THEN 'NOON' WHEN source_no_ = 'BCN/2021/4060' THEN 'ELGROCER' WHEN source_no_ = 'BCN/2021/4061' THEN 'SWAN' WHEN source_no_ = 'BCN/2021/4063' THEN 'CAREEM' WHEN source_no_ = 'BCN/2021/4064' THEN 'TALABAT' WHEN source_no_ = 'BCN/2021/4066' THEN 'AMAZON_DFS' WHEN source_no_ = 'BCN/2021/4067' THEN 'Deliveroo' when source_no_ = 'BCN/2021/0691' then 'AMAZON' -- adding new amazon fba codes when source_no_ = 'BCN/2024/4064' then 'AMAZON_FBA' --amazon fba codes end WHEN B.name = 'B2B Sales' THEN 'B2B' WHEN B.name = 'El Grocer' THEN 'ELGROCER' WHEN B.name = 'Instashop' THEN 'INSTASHOP' WHEN B.name IN ('Noon', 'NOWNOW', 'Now Now') THEN 'NOON' WHEN B.name = 'Online' THEN 'ONLINE' WHEN B.name = 'Project & Maintenance' THEN 'P&M' WHEN B.name = 'Pet Relocation' THEN 'PETRELOC' WHEN B.name = 'POS Sale' THEN 'SHOP' WHEN B.name = 'Swan Inc' THEN 'SWAN' WHEN B.name = 'Aquatics-Live Fish/Plants' THEN 'AQUA' WHEN B.name IN ('SOUQ', 'Souq/Amazone') THEN 'AMAZON' ELSE B.name END AS Global_Dimension_2_Code, Global_Dimension_2_Profit_Center_Code, cast(A.source_type as string) as source_type, gen__bus__posting_group AS Gen_Bus_Posting_Group, gen__prod__posting_group AS Gen_Prod_Posting_Group, CAST(document_date AS DATE) AS Document_Date, order_no_ AS Order_No, valuation_date, NULL AS Sales_Person_Code, cast(document_no_ as STRING) AS SalesOrderNo FROM petshop_value_entry A INNER JOIN ( SELECT code, name FROM `sql_erp_prod_dbo.petshop_dimension_value_437dbf0e_84ff_417a_965d_ed2bb9650972` WHERE dimension_code = 'PROFITCENTER' ) B ON A.Global_Dimension_2_Code = B.code WHERE DATE(A.posting_date) BETWEEN '2022-06-01' AND DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) AND item_ledger_entry_type = 1 AND global_dimension_2_code NOT IN ('110000', '100001', '111000') ), -- Third Subquery subquery3 AS ( SELECT item_no_ AS VE_ItemNo, item_no_ AS ItemNo, CAST(DATE(date) AS DATE) AS Posting_Date, 'Sale' AS Item_Ledger_Entry_Type, CAST(NULL AS STRING) AS Source_No, CAST(transaction_no_ AS STRING) AS Document_No_, store_no_ AS Location_Code, CAST(NULL AS STRING) AS Inventory_Posting_Group, CAST(NULL AS STRING) AS Source_Posting_Group, CAST(NULL AS INT64) AS item_ledger_entry_no_, NULL AS Valued_Quantity, NULL AS Item_Ledger_Entry_Quantity, SUM(Quantity) AS Invoiced_Quantity, NULL AS Cost_Per_Unit, SUM(net_amount * -1) AS Sales_Amount_Actual, CASE WHEN item_category_code IN ('310', '311') THEN 0 ELSE SUM(cost_amount) END AS Cost_Amount_Actual, NULL AS Purchase_Amount_Actual, SUM(discount_amount) AS Discount_Amount, CAST(NULL AS STRING) AS Source_Code, cast(Null as string) as name, CAST(NULL AS STRING) AS Global_Dimension_1_Code, 'PETGROOM' AS Global_Dimension_2_Code, 'PETGROOM' AS Global_Dimension_2_Profit_Center_Code, cast (NULL AS string)as Source_Type, CAST(NULL AS STRING) AS Gen_Bus_Posting_Group, CAST(NULL AS STRING) AS Gen_Prod_Posting_Group, CAST(DATE(date) AS DATE) AS Document_Date, CAST(NULL AS STRING) AS Order_No_, CAST(NULL AS DATETIME) AS Valuation_Date, NULL AS Sales_Person_Code, CAST(transaction_no_ AS STRING) AS SalesOrderNo FROM `sql_erp_prod_dbo.petshop_trans__sales_entry_5ecfc871_5d82_43f1_9c54_59685e82318d` WHERE retail_product_code IN ('31024', '31010', '31011', '31012', '31113', '31114') AND DATE(date) BETWEEN '2022-06-01' AND DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) GROUP BY item_no_, DATE(date), CAST(transaction_no_ AS STRING), store_no_, item_category_code ), subquery4 AS (select itemno AS VE_ItemNo, itemno AS ItemNo, CAST(posting_date AS DATE) AS Posting_Date, 'Sale' AS ItemLedger_Entry_Type, CAST(source_no AS STRING) AS Source_No, document_no AS Document_no, location_code AS Location_Code, inventory_posting_group AS Inventory_Posting_Group, source_posting_group AS Source_Posting_Group, item_ledger_entry_no, valued_quantity, item_ledger_entry_quantity, invoiced_quantity, cost_per_unit, sales_amount_actual, cost_amount_actual, purchase_amount_actual, discount_amount, cast(source_code as string) AS Source_Code, cast(null as string) name, CAST(null AS STRING) AS Global_Dimension_1_Code, saleschannel_code AS Global_Dimension_2_Code, saleschannel_code as Global_Dimension_2_Profit_Center_Code, cast(A.source_type as string)source_type, gen_bus_posting_group AS Gen_Bus_Posting_Group, gen_prod_posting_group AS Gen_Prod_Posting_Group, CAST(document_date AS DATE) AS Document_Date, salesorderno AS Order_No, valuation_date, NULL AS Sales_Person_Code, cast(salesorderno as STRING) AS SalesOrderNo from `Archive_Old_ERP_Data.ve_master` A where cast(Posting_Date as date) between '2021-01-01' and '2022-05-31' ) -- Final Query with UNION Select aa.*,bb.Phone_no_clean,cc.ProductName,Brand,Division,Item_Category,Item_Sub_Category,unit_cost,mm.Final_Discount,nn.Unit_Price*(-1*Invoiced_Quantity) as System_Basket_Price_VAT, nn.Unit_Price, case when aa.Name='Online' then mm.Final_Discount else Discount_Amount end AS Discount_Amount_final, CustomerEmail from (SELECT *,CASE WHEN Document_Date > Posting_Date THEN Posting_Date WHEN Document_Date IS NULL THEN Posting_Date ELSE CAST(Document_Date AS DATE) END AS Unit_Price_Date FROM subquery1 union all SELECT *,CASE WHEN Document_Date > Posting_Date THEN Posting_Date WHEN Document_Date IS NULL THEN Posting_Date ELSE CAST(Document_Date AS DATE) END AS Unit_Price_Date FROM subquery2 union all SELECT *,CASE WHEN Document_Date > Posting_Date THEN Posting_Date WHEN Document_Date IS NULL THEN Posting_Date ELSE CAST(Document_Date AS DATE) END AS Unit_Price_Date FROM subquery3 union all SELECT *,CASE WHEN Document_Date > Posting_Date THEN Posting_Date WHEN Document_Date IS NULL THEN Posting_Date ELSE CAST(Document_Date AS DATE) END AS Unit_Price_Date FROM subquery4 )aa left join ( select orderno from (select orderno,sum(amount)as amnt from `Fact.Fact_Orders_table` where orderdate='2024-02-01' and data_source='ERP' group by 1)where amnt=0 )lk on lk.orderno=aa.SalesOrderNo left join ( Select CRM1.WebOrderNo,Max(CRM1.CustomerEmail) as CustomerEmail From `mysql_ofs.crmorders` CRM1 left join (Select WebOrderNo from `mysql_ofs.inboundsalesheader`) ISH1 on ISH1.WebOrderNo=CRM1.WebOrderNo group by 1 ) as CRMO ON aa.SalesOrderNo = CRMO.WebOrderNo left join ( select * from (select *,row_number()over(partition by item_no_,starting_date order by starting_date desc) as num2 from `Fact.Fact_Unit_Price`)where num2=1 )nn on CONCAT(CAST(EXTRACT(YEAR FROM aa.posting_date) AS STRING), LPAD(CAST(EXTRACT(MONTH FROM aa.posting_date) AS STRING), 2, '0'), LPAD(CAST(EXTRACT(DAY FROM aa.posting_date) AS STRING), 2, '0'), aa.ItemNo) =nn.YMDkey left join ( select * ,case when Items>1 and VQ>1 then (TotalDiscount*Items)/VQ when Items=1 and VQ>1 then (TotalDiscount/VQ) when Items=1 and VQ=1 then (TotalDiscount/VQ) else TotalDiscount end as Final_Discount from (select distinct K.documentno,K.ItemNO, A.VQ,K.Items, Sum(K.TotalDiscount)as TotalDiscount from Fact.Fact_Online_Discounts_Master K inner join ( select document_no_,Item_No_,count(valued_quantity) as VQ from petshop_value_entry A where source_code in ('SALES','INVTADJMT') group by document_no_,item_no_ ) A on concat(K.documentno ,K.ItemNO)= concat(A.document_no_ ,A.item_no_) group by K.DocumentNO,K.ItemNO,A.VQ,K.Items ) )mm on CONCAT(cast(aa.Document_no as string), CAST(aa.ItemNo AS STRING)) = CONCAT(cast(mm.documentno as string), CAST(mm.ItemNO AS STRING)) left join ( select * from( select source_no,Phone_no_clean,row_number()over (partition by source_no) as num from `Fact.Fact_Customer_Master` )where num=1 )bb on aa.Source_No=bb.source_no left join ( select * from `Fact.Fact_Item_Master` )cc on aa.ItemNo=cc.itemno where lk.orderno is null ) ) ) )ll left join ( select A.Staff_ID,B.Name_on_Receipt as Staff_Name, CONCAT(A.store_no_, "-", A.POS_Terminal_No_ ,"-",A.Transaction_No_) AS doc from `sql_erp_prod_dbo.petshop_trans__sales_entry_5ecfc871_5d82_43f1_9c54_59685e82318d` as A inner join `sql_erp_prod_dbo.petshop_staff_5ecfc871_5d82_43f1_9c54_59685e82318d` as B on A.staff_id=B.id where cast(A.Date as date)>'2021-07-01' and cast(A.Date as date)<current_date() group by 1,2,3 )jj on ll.OrderNo=jj.doc Left Join ( Select Phone_No_Clean, Max(Email) as Email FROM `tps-data-386515.sql_bi_historical_dbo.CustomerMaster` group by 1 ) as CusMas ON trim(ll.PhoneNumber) = trim(CusMas.Phone_No_Clean) left join (SELECT Orderno,1 as Flag FROM `tps-data-386515.Test_DSR_Dataset.Test_DSR_Defected_Records` where Orderno is not null) as Dsr_Defects on ll.OrderNo = Dsr_Defects.orderno ), OrdersSource_Manual_Upload AS ( Select OrderNo , MAX(OrderSource) as OrderSource from `tps-data-386515.ADHOC_Files.OrdersSource_Manual_Upload` Group by 1 ), Order_phone_mapping as ( Select OrderNo , PhoneNumber from ( select OrderNo , PhoneNumber ,Amount, ROW_NUMBER() OVER(partition by OrderNo Order by ABS(Amount) desc ) rnk from CTE where PhoneNumber is not null --and OrderNo = 'C00008680' order by 1 )x where x.rnk = 1 ), Adjusted_PhoneNumber as ( Select c.*,opm.PhoneNumber As PhoneNumebr_adjusted from CTE c LEFT JOIN Order_phone_mapping opm on c.OrderNo = opm.OrderNo ), FirstOrder as ( Select PhoneNumebr_adjusted , OrderNo ,Min_Ord_date, ROW_NUMBER() OVER (PARTITION BY PhoneNumebr_adjusted order by Min_Ord_date asc) order_rnk from ( Select PhoneNumebr_adjusted , OrderNo , MIN(COALESCE(Document_Date, OrderDate )) Min_Ord_date from Adjusted_PhoneNumber group by 1,2 )x Order by 2 ) ,ERP_only_Orders_New_Repeat as ( select -- data_source, OrderNo OrderNo_ERP, PhoneNumebr_adjusted, case when rank() over(partition by PhoneNumebr_adjusted order by min(OrderDate), OrderNo asc ) = 1 then "New" else "Repeat" end as New_Repeat_ERP_OCC_Separately_ERP from Adjusted_PhoneNumber where OrderNo not in (select OrderNo from Adjusted_PhoneNumber where data_source = "OCC" ) -- and PhoneNumebr_adjusted = "971567712414" -- and OrderNo = 'SZR-ST03-5259' group by 1,2 -- order by 4 desc, 3 ), OCC_Orders_New_Repeat as ( select OrderNo Order_No_OCC, PhoneNumebr_adjusted, case when rank() over(partition by PhoneNumebr_adjusted order by min(OrderDate), OrderNo asc ) = 1 then "New" else "Repeat" end as New_Repeat_ERP_OCC_Separately_OCC from Adjusted_PhoneNumber where OrderNo in (select OrderNo from Adjusted_PhoneNumber where data_source = "OCC" ) -- and PhoneNumebr_adjusted = "971567712414" -- and OrderNo = 'SZR-ST03-5259' group by 1,2 -- order by 3, min(OrderDate) ), New_Repeat_ERP_OCC_Separately_CTE as ( select Coalesce(occ.Order_No_OCC, erp.OrderNo_ERP) OrderNo_OCC_ERP, Coalesce(erp.New_Repeat_ERP_OCC_Separately_ERP, occ.New_Repeat_ERP_OCC_Separately_OCC) New_Repeat_ERP_OCC_Separately from OCC_Orders_New_Repeat occ full join ERP_only_Orders_New_Repeat erp on erp.OrderNo_ERP = occ.Order_No_OCC ) , agg_sales as ( Select CTE.* EXCEPT(OrderSource,Platform), -- row_number() over(partition by phonenumber order by OrderDate asc) as order_rank, Case When CTE.Platform IS NOT NULL AND CTE.Platform != '' Then CTE.Platform Else ( case when OrdersSource_Manual_Upload.OrderSource ='D' then 'Website' when OrdersSource_Manual_Upload.OrderSource in ('CRM','CRM Exchange','FOC') then 'CRM' when OrdersSource_Manual_Upload.OrderSource in('A') then 'Android' when OrdersSource_Manual_Upload.OrderSource in('I') then 'iOS' else OrdersSource_Manual_Upload.OrderSource end ) End as Platform , Case When CTE.OrderSource IS NOT NULL AND CTE.OrderSource != '' Then CTE.OrderSource Else ( case when OrdersSource_Manual_Upload.OrderSource ='D' then 'Website' when OrdersSource_Manual_Upload.OrderSource in ('CRM','CRM Exchange','FOC') then 'CRM' when OrdersSource_Manual_Upload.OrderSource in('A','I') then 'Mobile App' else OrdersSource_Manual_Upload.OrderSource end ) end as OrderSource, fo.order_rnk from Adjusted_PhoneNumber CTE left join OrdersSource_Manual_Upload On CTE.OrderNo=OrdersSource_Manual_Upload.OrderNo LEFT JOIN FirstOrder fo on CTE.PhoneNumebr_adjusted = fo.PhoneNumebr_adjusted and CTE.OrderNo = fo.OrderNo ), loyalty_transaction as ( select transactionId,memberId,assignedToMemberAt, trim(JSON_EXTRACT_SCALAR(header, '$.documentNumber')) AS documentNumber, JSON_EXTRACT_SCALAR(header, '$.labels[0].value') AS channel, JSON_EXTRACT_SCALAR(header, '$.labels[1].value') AS source, row_number() over(partition by memberId order by assignedToMemberAt asc)as num from tps-data-386515.loyalty_aws.transactions --where JSON_EXTRACT_SCALAR(header, '$.documentNumber') = 'DIP-DT03-102256' ), Cleaned_loyalty_orders as ( Select distinct Cleaned_orderNo from ( Select documentNumber , MAX(Cleaned_orderNo) Cleaned_orderNo from ( Select documentNumber , trim(CAse when REGEXP_CONTAINS(documentNumber , "_INV") then SUBSTR(documentNumber, 1, STRPOS(documentNumber, "_") - 1) else documentNumber end ) Cleaned_orderNo from loyalty_transaction )x group by 1 ) ), online_offline_column_new_columns as ( select agg_sales.* , case when agg_sales.order_rnk=1 then "New" else "Repeat" end as New_vs_Returning, CASE WHEN Global_Dimension_2_Code = 'B2B' THEN 'B2B' WHEN Global_Dimension_2_Code = 'AMAZON_DFS' THEN 'AMAZON_DFS' WHEN Global_Dimension_2_Code = 'AMAZON_FBA' THEN 'AMAZON_FBA' WHEN Global_Dimension_2_Code = 'AMAZON' THEN 'AMAZON' WHEN Global_Dimension_2_Code = 'SWAN' THEN 'SWAN' WHEN Global_Dimension_2_Code = 'TALABAT' THEN 'TALABAT' WHEN Global_Dimension_2_Code = 'CAREEM' THEN 'CAREEM' WHEN Global_Dimension_2_Code = 'NOON' THEN 'NOON' WHEN Global_Dimension_2_Code = 'INSTASHOP' THEN 'INSTASHOP' WHEN Global_Dimension_2_Code = 'ELGROCER' THEN 'ELGROCER' WHEN Global_Dimension_2_Code = 'Deliveroo' THEN 'Deliveroo' WHEN Global_Dimension_2_Code = 'BlazeApp' THEN 'BlazeApp' WHEN Global_Dimension_2_Code = 'P&M' THEN 'P&M' WHEN Global_Dimension_2_Code = 'PETRELOC' THEN 'PETRELOC' WHEN Global_Dimension_2_Code = 'ONLINE' AND OrderSource = 'Mobile App' THEN 'Mobile app' WHEN Global_Dimension_2_Code = 'ONLINE' AND platform = 'Website' THEN 'Website' WHEN Global_Dimension_2_Code = 'ONLINE' AND platform = 'CRM' THEN 'CRM' WHEN Global_Dimension_2_Code = 'ONLINE' THEN 'ONLINE' WHEN Global_Dimension_2_Code IN ('PETGROOM', 'Shop Grooming','Mobile Grooming') THEN 'PETGROOM' WHEN Global_Dimension_2_Code = 'SHOP' AND location_code = 'UMSQ' THEN 'UMSQ' WHEN Global_Dimension_2_Code = 'SHOP' AND location_code = 'SZR' THEN 'SZR' WHEN Global_Dimension_2_Code = 'SHOP' AND location_code = 'WSL' THEN 'WSL' WHEN Global_Dimension_2_Code = 'SHOP' AND location_code = 'CREEK' THEN 'CREEK' WHEN Global_Dimension_2_Code = 'SHOP' AND location_code = 'DIP' THEN 'DIP' WHEN Global_Dimension_2_Code = 'SHOP' AND location_code = 'RAK' THEN 'RAK' WHEN Global_Dimension_2_Code = 'SHOP' AND location_code = 'DLM' THEN 'DLM' WHEN Global_Dimension_2_Code = 'SHOP' AND location_code = 'FZN' THEN 'FZN' WHEN Global_Dimension_2_Code = 'SHOP' AND location_code = 'REM' THEN 'REM' WHEN Global_Dimension_2_Code = 'SHOP' AND location_code = 'DSO' THEN 'DSO' WHEN Global_Dimension_2_Code = 'SHOP' AND location_code = 'MRI' THEN 'MRI' WHEN Global_Dimension_2_Code = 'SHOP' AND location_code = 'HQW' THEN 'HQW' ELSE 'Others' END AS Channel, case when lower(Global_Dimension_2_Code) in ('instashop', 'amazon_fba','talabat','noon','careem','elgrocer', 'deliveroo', 'amazon_dfs','amazon','amazon_fba','blazeapp','swan') then 'AFFILIATE' when lower(Global_Dimension_2_Code) in ('petgroom','petreloc','grm','mobile grooming', 'shop grooming') then 'GROOMING' when lower(Global_Dimension_2_Code) in ('online') then 'ONLINE' when Global_Dimension_2_Code in ('B2B') then 'B2B' else 'SHOP' end as Omni_Channel, Case when clo.Cleaned_orderNo is not null then TRUE else False end as Loyalty_Order, coalesce(fo.Min_Ord_date,agg_sales.OrderDate) Min_Ord_date /* CASE WHEN MIN(OrderDate) OVER (PARTITION BY PhoneNumber) < MAX(OrderDate) OVER (PARTITION BY PhoneNumber,OrderDate,data_source,cte.OrderNo) then 'Returning' WHEN MIN(OrderDate) OVER (PARTITION BY PhoneNumber) = MAX(OrderDate) OVER (PARTITION BY PhoneNumber,OrderDate,data_source,cte.OrderNo) AND RANK() OVER (PARTITION BY PhoneNumber ORDER BY OrderDate,data_source,cte.OrderNo ) <> 1 then 'Returning' else 'New' end New_vs_Returning,*/ /* Old logic Case when PhoneNumber = "Not Available" and CustomerId = "Not Available" and CustomerEmail = "Not Available" then "Returning" when rnk = 1 then 'New' else "Returning" end as New_vs_Returning*/ from agg_sales left join Cleaned_loyalty_orders clo on trim(agg_sales.OrderNo) = trim(clo.Cleaned_orderNo) left join FirstOrder fo on trim(agg_sales.OrderNo) = trim(fo.OrderNo) and trim(agg_sales.PhoneNumebr_adjusted) = trim(fo.PhoneNumebr_adjusted) ) select fct.*, case when fct.data_source = "OCC" and fct.Global_Dimension_2_Code = "ONLINE" then "ONLINE" when fct.data_source = "ERP" and fct.Global_Dimension_2_Code <> "ONLINE" then "OFFLINE" when fct.data_source = "ERP" and fct.Global_Dimension_2_Code = "ONLINE" then "ONLINE POSTED IN ERP" else null end as Online_Offline ,EO_S_CTE.New_Repeat_ERP_OCC_Separately New_Repeat_ERP_OCC_Separately from online_offline_column_new_columns fct left join New_Repeat_ERP_OCC_Separately_CTE EO_S_CTE on fct.OrderNo = EO_S_CTE.OrderNo_OCC_ERP; /* Already updated on top cte "petshop_value_entry" no need for below code Update `Fact.Fact_Orders_table` set Channel = Location_Code, Global_Dimension_2_Code = Location_Code, Omni_Channel = 'SHOP' where Document_no in (SELECT `Document No` FROM `tps-data-386515.ADHOC_Files.B2BOrderExclusion` ) and Omni_Channel = 'B2B'; */
